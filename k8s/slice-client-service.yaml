apiVersion: v1
kind: Service
metadata:
  name: slice-client-service
  namespace: lb-demo
  labels:
    app: slice-client-service
spec:
  selector:
    app: slice-client-service
  ports:
    - name: http
      protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30083
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slice-client-service-zone-a
  namespace: lb-demo
  labels:
    app: slice-client-service
    zone: zone-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slice-client-service
      zone: zone-a
  template:
    metadata:
      labels:
        app: slice-client-service
        zone: zone-a
        topology.kubernetes.io/zone: zone-a
      annotations:
        kubectl.kubernetes.io/restartedAt: "{{ .Release.Time }}"
    spec:
      serviceAccountName: spring-cloud-kubernetes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - zone-a
      containers:
        - name: slice-client-service
          image: slice-client-service:latest
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: ZONE
              value: "zone-a"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slice-client-service-zone-b
  namespace: lb-demo
  labels:
    app: slice-client-service
    zone: zone-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slice-client-service
      zone: zone-b
  template:
    metadata:
      labels:
        app: slice-client-service
        zone: zone-b
        topology.kubernetes.io/zone: zone-b
      annotations:
        kubectl.kubernetes.io/restartedAt: "{{ .Release.Time }}"
    spec:
      serviceAccountName: spring-cloud-kubernetes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - zone-b
      containers:
        - name: slice-client-service
          image: slice-client-service:latest
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: ZONE
              value: "zone-b"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

