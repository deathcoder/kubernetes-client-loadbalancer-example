apiVersion: v1
kind: Service
metadata:
  name: wrapped-client-service
  namespace: lb-demo
  labels:
    app: wrapped-client-service
spec:
  selector:
    app: wrapped-client-service
  ports:
    - name: http
      port: 8081
      targetPort: 8081
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wrapped-client-service-zone-a
  namespace: lb-demo
  labels:
    app: wrapped-client-service
    zone: zone-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wrapped-client-service
      zone: zone-a
  template:
    metadata:
      labels:
        app: wrapped-client-service
        zone: zone-a
        topology.kubernetes.io/zone: zone-a
    spec:
      serviceAccountName: spring-cloud-kubernetes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - zone-a
      containers:
        - name: wrapped-client-service
          image: wrapped-client-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: ZONE
              value: "zone-a"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NAMESPACE
              value: "lb-demo"
            - name: SPRING_CLOUD_LOADBALANCER_ZONE
              value: "zone-a"
            - name: SPRING_CLOUD_KUBERNETES_DISCOVERY_ENABLED
              value: "true"
            - name: SPRING_CLOUD_KUBERNETES_CLIENT_NAMESPACE
              value: "lb-demo"
            - name: SPRING_CLOUD_LOADBALANCER_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wrapped-client-service-zone-b
  namespace: lb-demo
  labels:
    app: wrapped-client-service
    zone: zone-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wrapped-client-service
      zone: zone-b
  template:
    metadata:
      labels:
        app: wrapped-client-service
        zone: zone-b
        topology.kubernetes.io/zone: zone-b
    spec:
      serviceAccountName: spring-cloud-kubernetes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - zone-b
      containers:
        - name: wrapped-client-service
          image: wrapped-client-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: ZONE
              value: "zone-b"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NAMESPACE
              value: "lb-demo"
            - name: SPRING_CLOUD_LOADBALANCER_ZONE
              value: "zone-b"
            - name: SPRING_CLOUD_KUBERNETES_DISCOVERY_ENABLED
              value: "true"
            - name: SPRING_CLOUD_KUBERNETES_CLIENT_NAMESPACE
              value: "lb-demo"
            - name: SPRING_CLOUD_LOADBALANCER_ENABLED
              value: "true"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

